// ==========================================================================
// # Cheat - Hot fixes and quick code; needs cleaning up afterwards
// ==========================================================================

body {
//   min-height: 100vh;
//   display: flex;
//   align-items: center;
//   justify-content: center;
  background: #222;
//   background: linear-gradient(to bottom left, #2a2a2a, #1a1a1a);
//   font-family: system-ui;
}


.keyboard {
  --keyboard-radius: 4vmin;
  --keyboard-red: rgb(255, 100, 100);
  --keyboard-green: rgb(100, 200, 100);
  --keyboard-blue: rgb(100, 100, 255);
  
  background-color: #111;
  // padding: 2vmin;
  // border-radius: var(--keyboard-radius);
  box-shadow: 0 4vmin #0b0b0b, -2vmin 5vmin 4vmin #0a0a0a;
  position: relative;
  box-sizing: border-box;
  
  .keyboadr-inner {
    display: flex;
    gap: 6px;
    padding: 0.75vmin 1vmin 1vmin;
    overflow: hidden;
    background-color: #222;
    box-shadow: 0 0.5vmin rgba(0, 0, 0, 1) inset;
    
    .key {
      // width: 50px;
      width: 100%;
      min-width: 50px;
      
      height: 50px;
      padding: 3px 2px 4px;
      top: 3px;
      position: relative;
      overflow: hidden;
      border-radius: calc(var(--keyboard-radius) * 0.5);
      transform: translate3d(0, 0, 0); // safari fix lol
      animation: shadow 5s -0.5s linear infinite;
      font-size: 12px;

      --delay: 0;
      @for $i from 1 through 10 {
        &:nth-child(1n + #{$i}) {
          --delay: #{$i / 5}s;
          animation: shadow 5s calc(-0.5s + var(--delay)) linear infinites;
          .key-content {
            animation: color 5s calc(-0.5s + var(--delay)) linear infinite;
          }
        }
      }

      &-number {
        display: flex;
        flex-direction: column;
        line-height: normal;
        font-size: 12px;
      }

      &-space {
        width: 100%;
      }

      &-key {
        width: 50px;
        height: 50px;
        text-align: center;
        font-size: 18px;
      }

      &-key-primary {
        font-size: 18px;
      }

      &-key-secondary {
        font-size: 12px;
      }

      @keyframes shadow {
        0% { box-shadow: 0 0 5vmin -2vmin var(--keyboard-red); }
        33% { box-shadow: 0 0 5vmin -2vmin var(--keyboard-blue); }
        66% { box-shadow: 0 0 5vmin -2vmin var(--keyboard-green); }
        100% { box-shadow: 0 0 5vmin -2vmin var(--keyboard-red); }
      }

      &:before {
        content: '';
        width: 400vmin;
        height: 400vmin;
        position: absolute;
        top: 150%;
        left: 150%;
        transform: translate(-50%, -50%);
        background: conic-gradient(var(--keyboard-red), var(--keyboard-green), var(--keyboard-blue), var(--keyboard-red));
        animation: spin 5s var(--delay) linear infinite;

        @keyframes spin {
          from { transform: translate(-50%, -50%) rotate(0deg); }
          to { transform: translate(-50%, -50%) rotate(360deg); }
        }
      }



      .key-content {
        width: 100%;
        height: 100%;
        background-color: #111;
        position: relative;
        border-radius: calc(var(--keyboard-radius) * 0.4);
        // font-size: 12px; 
        top: -0.3vmin;


        padding: 0 8px;

        display: flex;
        align-items: center;
        justify-content: center;
        color: #FFF;
        z-index: 1;
        cursor: pointer;
        user-select: none;
        box-shadow: 0 0.6vmin rgba(0, 0, 0, 0.6);
        transition: top 0.1s ease-in-out, box-shadow 0.1s ease-in-out, background-color 0.1s ease-in-out;
        
        &:active {
          top: 0vmin;
          box-shadow: 0 0.3vmin rgba(0, 0, 0, 0.6);
          background-color: rgba(#111, 0.9);
        }
        
        @keyframes color {
          0% { color: var(--keyboard-red); }
          33% { color: var(--keyboard-blue); }
          66% { color: var(--keyboard-green); }
          100% { color: var(--keyboard-red); }
        }
      }
    }
  }
}